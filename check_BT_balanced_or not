#include "bits/stdc++.h"
using namespace std;

  struct Node{
      int data;
      struct Node*left;
      struct Node*right;
      
//   CONSTRUCTOR----    
      Node(int val){
      data = val;
      left =NULL;
      right = NULL;
  }
};

//  ---FUNCTION FOR HEIGHT----
  int height(Node*root){
      if(root == NULL){
          return 0;
      }
      int lh = height(root->left);
      int rh = height(root->right);
      return max(lh , rh ) + 1;
  }
  


// ---FUNCTION FOR CHECKING BALANCE--

   bool is_balanced(Node*root){
    // --base condition---
    if(root == NULL){
        return true;
    }
       
 if(is_balanced(root->left)== false){
     return false;
 }
 if(is_balanced(root->right)== false){
     return false;
 }
 
//  --------------
   int lh = height(root->left);
   int rh = height(root->right);
   
   if(abs(lh-rh)<= 1){
       return true;
     }
     
     else {
        return false;
     }

   }


int main()
{
    struct Node* root= new Node(1);
    root->left = new Node(2);
    root->right= new Node(3);
    root->left->left = new Node(4)  ;
      root-> right->right = new Node(5);
      
     if(is_balanced(root))  {
         cout<<" balanced tree"<<endl;
     }
     else{
         cout<<"unbalance tree"<<endl;
     }
        
    return 0;
}
